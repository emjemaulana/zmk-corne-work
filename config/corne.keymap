/*
 * Copyright (c) 2020 The ZMK Contributors
 *
 * SPDX-License-Identifier: MIT
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>

#define BASE    0
#define LOWER   1
#define RAISE   2
#define BOTH    3

&mt {
    tapping-term-ms = <400>;
};

/ {
        keymap {
                compatible = "zmk,keymap";

                base_layer {

                        bindings = <
   &kp GRAVE   &kp Q       &kp D       &kp R        &kp W        &kp B    &kp J  &kp F        &kp U        &kp P        &kp SEMI    &kp BSLH
   &kp ESC     &mt LGUI A  &mt LALT S  &mt CARET D  &mt LSHFT F  &kp G    &kp Y  &mt LSHFT N  &mt CARET E  &mt RALT O   &mt RGUI I  &kp SQT
   &kp TAB     &kp Z       &kp X       &kp M        &kp C        &kp V    &kp K  &kp L        &kp COMMA    &kp DOT      &kp FSLH    &kp BSPC
                              &kp CLCK &mo LOWER &kp SPACE   &kp RET &mo RAISE &to BOTH
                        >;
                };
                raise_layer {

                        bindings = <
   &kp DEL    &kp N1       &kp N2       &kp N3       &kp N4       &kp N5         &kp N6   &kp N7    &kp N8    &kp N9    &kp N0    &trans
   &kp CARET  &kp DLLR     &kp PLUS     &kp LPAR     &kp RPAR     &kp AT         &kp PIPE &kp MINUS &kp EQUAL &kp UNDER &kp ASTRK &trans
   &kp LALT   &kp EXCL     &kp HASH     &kp LBRC     &kp RBRC     &kp TILDE      &kp AMPS &kp LBKT  &kp RBKT  &kp PRCNT &kp CARET &trans
                                    &trans     &trans       &trans      &trans  &trans   &trans
                        >;
                };

                lower_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };

                both_layer {
// -----------------------------------------------------------------------------------------
// |  TAB |  !  |  @  |  #  |  $  |  %  |   |  ^  |  &  |  *  |  (  |  )  | BKSP |
// | CTRL |     |     |     |     |     |   |  -  |  =  |  [  |  ]  |  \  |  `   |
// | SHFT |     |     |     |     |     |   |  _  |  +  |  {  |  }  | "|" |  ~   |
//                    | GUI |     | SPC |   | ENT |     | ALT |
                        bindings = <
   &kp  TAB  &kp EXCL &kp AT &kp HASH &kp DLLR &kp PRCNT   &kp CARET &kp AMPS  &kp KP_MULTIPLY &kp LPAR &kp RPAR &kp BSPC
   &kp LCTRL &trans   &trans &trans   &trans   &trans      &kp MINUS &kp EQUAL &kp LBKT        &kp RBKT &kp BSLH &kp GRAVE
   &kp LSHFT &trans   &trans &trans   &trans   &trans      &kp UNDER &kp PLUS  &kp LBRC        &kp RBRC &kp PIPE &kp TILDE
                             &kp LGUI &trans   &kp SPACE   &kp RET   &trans    &kp RALT
                        >;
                };
        };
};
